---
- hosts: controller;network;compute
  user: vagrant
  sudo: True

  vars_files:
    - ../vars/global.yml
    - ../vars/${ansible_distribution}.yml

  vars:
    # Options: folsom-stable, essex-stable, grizzly-trunk
    openstack_release: folsom-stable
    keystone_server: 192.168.206.110
    keystone_server_internal_ip: 192.168.100.110

    keystone_user: keystone
    keystone_db_password: keysarelocked
    glance_user: glance
    glance_db_password: keysarelocked
    quantum_user: quantum
    quantum_db_password: keysarelocked
    nova_user: nova
    nova_db_password: keysarelocked

    admin_token: 012345SECRET99TOKEN012345

  tasks:
    - name: Fail if distro not Ubuntu 12.04 | constrain testing and development
      fail: msg="Must be running Ubuntu 12.04"
      only_if: "'$dist_tag' != 'ubuntu12.04'"

    - include: ../tasks/common.yml

    # setup controller node
    # keystone, glance, horizon, quantum
    - name: Install Mysql and RabbitMQ
      apt: name=$item state=present
      with_items:
        - mysql-server
        - python-mysqldb
        - rabbitmq-server
        - python-yaml
        - python-keystoneclient

    - name: Install Addtional Services
      apt: name=$item state=present
      with_items:
        - ntp
        - vlan
        - bridge-utils

    - name: Enable IP forwarding
      template: src=../files/${dist_tag}/sysctl.conf dest=/etc/sysctl.conf owner=root group=root

    - name: Load changes from sysctl.conf
      command: sysctl -p

    # setup mysql for keystone
    - name: Mysql | Listen on public interface 
      template: src=../files/${dist_tag}/my.cnf dest=/etc/mysql/my.cnf owner=root group=root

    - name: Ensure DB for keystone exists
      mysql_db: name=keystone state=present

    - name: Ensure keystone database user is present
      mysql_user: name=${keystone_user} host=% password=${keystone_db_password} priv=${keystone_user}.*:ALL

    # See the following links for why anonymous mysql users cause problems:
    # http://www.tikalk.com/alm/blog/solution-mysql-error-1045-access-denied-userlocalhost-breaks-openstack
    # http://lists.mysql.com/mysql/128381
    - name: Ensure anonymous users removed from mysql
      action: mysql_user name='' host=$item state=absent
      with_items:
        - localhost
        - ${ansible_hostname}

    - name: Restart Mysql
      service: name=mysql state=restarted

    #
    # setup keystone
    #
    - name: Install Keystone
      apt: name=$item state=present
      with_items:
        - keystone

    - name: Ensure sqlite keystone database is deleted
      file: dest=/var/lib/keystone/keystone.db state=absent

    - name: Configure Keystone
      template: src=../templates/${dist_tag}/${openstack_release}/keystone.conf dest=/etc/keystone/keystone.conf owner=root group=root

    - name: Restart Keystone
      service: name=keystone state=restarted

    - name: Sync Keystone database
      command: keystone-manage db_sync

    # create keystone users and endpoints
    - name: Ensure keystone-init.py is present
      copy: src=../files/keystone-init.py dest=/tmp/keystone-init.py owner=root group=root mode=0755

    - name: Ensure kestyone-config.yaml is present
      template: src=../templates/${dist_tag}/${openstack_release}/keystone-config.yaml dest=/tmp/keystone-config.yaml owner=root group=root mode=0600

    - name: Populate keystone database
      command: /tmp/keystone-init.py /tmp/keystone-config.yaml
      ignore_errors: True

    - name: Ensure credentials.sh exists for convenience
      template: src=../templates/credentials.sh dest=/root/credentials.sh owner=root group=root mode=0600


    #
    # setup glance
    #
    - name: Install Glance
      apt: name=$item state=present
      with_items:
        - glance

    - name: Create DB for Glance
      mysql_db: name=glance state=present

    - name: Create glance db user and enable rights to glance db
      mysql_user: name=${glance_user} host=% password=${glance_db_password} priv=${glance_user}.*:ALL

    - name: Update glance-api-paste.ini
      template: src=../templates/${dist_tag}/${openstack_release}/glance-api-paste.ini dest=/etc/glance/glance-api-paste.ini
      notify: Restart glance services

    - name: Update glance-registry-paste.ini
      template: src=../templates/${dist_tag}/${openstack_release}/glance-registry-paste.ini dest=/etc/glance/glance-registry-paste.ini
      notify: Restart glance services

    - name: Update glance-api.conf
      template: src=../templates/${dist_tag}/${openstack_release}/glance-api.conf dest=/etc/glance/glance-api.conf mode=0600
      notify: Restart glance services

    - name: Update glance-registry.conf
      template: src=../templates/${dist_tag}/${openstack_release}/glance-registry.conf dest=/etc/glance/glance-registry.conf mode=0600
      notify: Restart glance services

    - name: Sync Glance DB
      command: glance-manage db_sync
      ignore_errors: True
      notify: Restart glance services

    #
    # setup quantum
    #
    - name: Install Quantum
      apt: name=$item state=present
      with_items:
        - quantum-server
        - quantum-plugin-openvswitch

    - name: Create DB for quantum
      mysql_db: name=quantum state=present

    - name: Create quantum db user and enable rights to quantum db
      mysql_user: name=${quantum_user} host=% password=${quantum_db_password} priv=${quantum_user}.*:ALL
    - name: Update ovs_quantum_plugin.ini
      template: src=../templates/${dist_tag}/${openstack_release}/quantum/ovs_quantum_plugin.ini dest=/etc/quantum/plugins/openvswitch/ovs_quantum_plugin.ini mode=0600
      notify: Restart quantum services

    - name: Update apt-paste.ini
      template: src=../templates/${dist_tag}/${openstack_release}/quantum/api-paste.ini dest=/etc/quantum/api-paste.ini mode=0600
      notify: Restart quantum services

    #
    # setup nova
    #
    - name: Install Nova
      apt: name=$item state=present
      with_items:
        - nova-api
        - nova-cert
        - novnc
        - nova-consoleauth
        - nova-scheduler
        - nova-novncproxy

    - name: Create DB for nova
      mysql_db: name=nova state=present

    - name: Create nova db user and enable rights to nova db
      mysql_user: name=${nova_user} host=% password=${nova_db_password} priv=${nova_user}.*:ALL

    - name: Update apt-paste.ini
      template: src=../templates/${dist_tag}/${openstack_release}/nova/api-paste.ini dest=/etc/nova/api-paste.ini mode=0600
      notify: Restart nova services

    - name: Update nova.conf
      template: src=../templates/${dist_tag}/${openstack_release}/nova/nova.conf dest=/etc/nova/nova.conf mode=0600
      notify: Restart nova services

    - name: Sync Nova DB
      command: nova-manage db sync
      notify: Restart nova services

  handlers:
    - name: Restart glance services
      service: name=$item state=restarted
      with_items:
        - glance-api
        - glance-registry

    - name: Restart quantum services
      service: name=$item state=restarted
      with_items:
        - quantum-server

    - name: Restart nova services
      service: name=$item state=restarted
      with_items:
        - nova-api
        - nova-consoleauth
        - nova-scheduler
        - nova-cert
        - nova-novncproxy
        - novnc

    ### setup network node
    ### setup compute node
